---
import Icon from 'astro-icon'
---

<button id="hamburger" class="hamburger" aria-expanded="false">
  <div class="top"></div>
  <div class="middle"></div>
  <div class="bottom"></div>
</button>

<div class="mobile-nav-overlay">
  <ul>
    <li><a href="/" aria-label="home" data-astro-prefetch>Home</a></li>
    <li><a href="/menu" aria-label="menu" data-astro-prefetch>Menu</a></li>
    <li><a href="https://bornyesterdaybakery.square.site/" aria-label="order">Order</a></li>
    <li><a href="/contact" aria-label="contact" data-astro-prefetch>Contact</a></li>
    <div class="icons">
      <a
        href="https://www.instagram.com/bornyesterdaybakery/"
        target="_blank"
        rel="noopener noreferrer"
        aria-label="Instagram"
      >
        <Icon name="instagram" />
      </a>
      <a href="mailto:bornyesterdaybakery@gmail.com" aria-label="Email">
        <Icon name="email" />
      </a>
    </div>
  </ul>
</div>

<style>
  .hamburger {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 2rem;
    height: 2rem;
    z-index: 4;
    background-color: transparent;
    border: 0;
    cursor: pointer;
  }

  @media (min-width: 768px) {
    .hamburger {
      display: none;
    }
  }

  .hamburger .top,
  .hamburger .middle,
  .hamburger .bottom {
    height: 2px;
    border-radius: 5px;
    background-color: var(--color-black);
    transition: all 0.6s cubic-bezier(0.68, -0.85, 0.265, 1.55);
  }

  .hamburger .top,
  .hamburger .middle,
  .hamburger .bottom {
    width: 22px;
  }

  .hamburger .top {
    transform: translateY(-4px);
  }

  .hamburger .bottom {
    transform: translateY(4px);
  }

  .hamburger.active .top {
    transform: translateY(2px) rotate(45deg);
  }

  .hamburger.active .middle {
    opacity: 0;
  }

  .hamburger.active .bottom {
    transform: translateY(-2px) rotate(-45deg);
  }

  .mobile-nav-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    opacity: 0;
    z-index: -1;
    visibility: hidden;
    background-color: var(--color-secondary);
    backdrop-filter: saturate(180%) blur(5px);
    transition:
      opacity var(--transition-normal),
      visibility 0s var(--transition-normal),
      z-index 0s var(--transition-normal);
    border-radius: 1rem;
  }

  .hamburger.active + .mobile-nav-overlay {
    opacity: 1;
    visibility: visible;
    transition: opacity var(--transition-normal);
    z-index: 3;
  }

  .mobile-nav-overlay ul {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .mobile-nav-overlay ul li {
    opacity: 0;
    transition: all var(--transition-normal);
    font-size: var(--size-lg);
  }

  .mobile-nav-overlay ul li:hover {
    color: var(--color-primary);
  }

  .hamburger.active + .mobile-nav-overlay ul li {
    opacity: 1;
  }

  .mobile-nav-overlay li {
    margin-bottom: 1rem;
  }

  .icons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    margin-top: 2rem;
  }

  .icons svg {
    width: var(--size-lg);
    height: var(--size-lg);
    transition: all var(--transition-normal);
  }

  .icons svg:hover {
    color: var(--color-primary);
  }
</style>

<script>
  const body = document.querySelector('body')
  const hamburger = document.getElementById('hamburger')
  const navItems = document.querySelectorAll('.mobile-nav-overlay li')
  let overlayDisplayed = false

  function handleMobileNavigationOnClick() {
    overlayDisplayed = !overlayDisplayed
    body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
    hamburger?.classList.toggle('active')
    hamburger?.setAttribute('aria-expanded', `${overlayDisplayed}`)
  }

  function handleMobileNavigationOnResize() {
    if (window.innerWidth >= 768) {
      overlayDisplayed = false
      body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
      hamburger?.classList.remove('active')
      hamburger?.setAttribute('aria-expanded', `${overlayDisplayed}`)
    }
  }

  function closeMobileNavOverlay() {
    overlayDisplayed = false
    body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
    hamburger?.classList.remove('active')
    hamburger?.setAttribute('aria-expanded', `${overlayDisplayed}`)
  }

  // Accessibility
  body?.addEventListener('keyup', (event) => {
    if (event.code === 'Escape' && overlayDisplayed) {
      handleMobileNavigationOnClick()
    }
  })

  hamburger?.addEventListener('click', handleMobileNavigationOnClick)
  window.addEventListener('resize', handleMobileNavigationOnResize)
  navItems.forEach((item) => item.addEventListener('click', closeMobileNavOverlay))
</script>
