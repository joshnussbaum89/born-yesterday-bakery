---
import { getImage } from 'astro:assets'
import { Icon } from 'astro-icon/components'
import sproutedRye from '../assets/sprouted-rye.png'

// Creating multiple image file types causes multiple network requests to load each image
// For now, we are using WEBP only to reduce the number of requests
const { src: sproutedRyeImageWebp } = await getImage({ src: sproutedRye, format: 'webp' })
---

<div
  class="splash"
  style={`background-image: url(${sproutedRyeImageWebp});
`}
>
  <div class="scrim"></div>
  <div class="splash-content">
    <Icon class="logo" name="logo" />
    <p>Sourdough baked goods made with local, organic & ancient grains in Western Maine</p>
    <div class="splace-ctas">
      <button class="site-cta">Enter Site</button>
      <a href="https://bornyesterdaybakery.square.site/" class="site-cta" aria-label="Order Now"
        >Order Now</a
      >
    </div>
    <div class="splash-icons">
      <a
        href="https://www.instagram.com/bornyesterdaybakery/"
        target="_blank"
        rel="noopener noreferrer"
        aria-label="Instagram"
      >
        <Icon name="instagram" />
      </a>
      <a href="mailto:bornyesterdaybakery@gmail.com" aria-label="Email">
        <Icon name="email" />
      </a>
    </div>
  </div>
</div>

<style>
  .splash {
    visibility: hidden;
    z-index: -1;
    position: fixed;
    height: 100vh;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;
    background-size: cover;
    background-position: center;
    opacity: 0;
    transition: all var(--transition-long);
  }

  .splash.active {
    opacity: 1;
    visibility: visible;
    z-index: 100;
  }

  .splash .scrim {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: var(--color-secondary-transparent);
    z-index: -1;
  }

  .splash-content {
    padding: 1rem;
    text-align: center;
  }

  .splash-content .logo {
    width: clamp(100px, 80%, 375px);
    height: auto;
  }

  .splash-content p {
    max-width: 525px;
    margin: 0 auto 2rem;
    font-size: clamp(var(--size-xs), 5vw, var(--size-base));
    line-height: clamp(var(--size-sm), 8vw, var(--size-lg));
    color: var(--color-black);
  }

  .splace-ctas {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: clamp(var(--size-xs), 2vw, var(--size-base));
    margin-bottom: 2rem;
  }

  .splace-ctas .site-cta {
    font-size: clamp(var(--size-xs), 5vw, var(--size-base));
    color: var(--color-secondary);
    border: 2px solid var(--color-primary);
  }

  .splace-ctas button.site-cta:hover {
    color: var(--color-primary);
    background-color: transparent;
  }

  .splace-ctas a.site-cta {
    color: var(--color-primary);
    background-color: transparent;
  }

  .splace-ctas a.site-cta:hover {
    color: var(--color-secondary);
    background-color: var(--color-primary);
  }

  .splash-icons,
  .splash-icons a {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .splash-icons {
    gap: var(--size-base);
  }

  .splash-icons a:hover svg {
    color: var(--color-primary);
  }
</style>

<script>
  function handleSplashDisplay() {
    const body = document.querySelector('body')
    const splash = document.querySelector('.splash')
    const buttons = document.querySelectorAll('.splash .site-cta')
    const userClosedSplash = sessionStorage.getItem('user-closed-splash') === 'true'

    const closeSplash = () => {
      splash?.classList.remove('active')
      body!.dataset.overlayDisplayed = 'false'
      sessionStorage.setItem('user-closed-splash', 'true')
    }

    const showSplash = () => {
      splash?.classList.add('active')
      body!.dataset.overlayDisplayed = 'true'
      sessionStorage.setItem('user-closed-splash', 'false')
    }

    // If user has not closed the splash, show it
    if (!userClosedSplash) {
      showSplash()
    }

    buttons.forEach((button) => button.addEventListener('click', closeSplash))
  }

  // Load immediately if the DOM is ready
  window.addEventListener('DOMContentLoaded', handleSplashDisplay)
</script>
